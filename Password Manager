import base64
import os
from cryptography.fernet import Fernet
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC

print("Welcome to your password manager")
master_key = input("What is the master key?: ")
bytemasterkey = bytes(master_key, 'utf-8')
salt = os.urandom(10)
kdf = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=salt, iterations=390000)
key = base64.urlsafe_b64encode(kdf.derive(bytemasterkey))
fer = Fernet(key)

def add():
    print("What account and password you would like to add?")
    accountname = input("Account Name: ")
    password = input("Password: ")
    tobeencrypt = accountname+","+password
    with open('password.txt', 'w') as f:
        f.write(fer.encrypt(tobeencrypt.encode()).decode())

def view():
    confirmationuser = input("You are currently in password manager view mode, Do you wish to continue "
                             "Y = Yes and N = No: ").lower()
    if confirmationuser == 'y':
        with open('password.txt', 'r') as f:
            for line in f.readlines():
                data = line.rstrip()
                tobedecrypt = fer.decrypt(data.encode()).decode('utf-8')
                print(tobedecrypt.split(","))

    elif confirmationuser == 'n':
        quit()
    else:
        print("Wrong input!")
        quit()



while True:
    userchoices = input("What would you like to do?, Add password or View password (Add/View) or Enter q to exit: ").lower()

    if userchoices == 'q':
        break

    elif userchoices == 'add':
        add()

    elif userchoices == 'view':
        userinput = input("To view, what is the master key?: ")
        if userinput != master_key:
            print("You cannot view the file!")
        else:
            view()

    else:
        print("Wrong input!")
        break
